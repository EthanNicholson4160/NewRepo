<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bkgWorker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>